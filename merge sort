#include <bits/stdc++.h>

using namespace std;

void merg (int a[],int l,int mid,int r)
{

     int n1 = mid - l + 1,n2 = r-mid;
   int * left=new int[n1],
       * right=new int [n2];

   for (int i = 0; i < n1; i++)
        left[i] = a[l + i];
    for (int j = 0; j < n2; j++)
        right[j] = a[mid + 1 + j];
int i=0,k=l,j=0;

   while(i<n1&&j<n2)
   {
    if(left[i]<=right[j])
    {
        a[k]=left[i];
        i++;
    }
    else
    {
        a[k]=right[j];
        j++;
    }
    k++;
   }
    while (i < n1)
  {
    a[k] = left[i];
    i++;
    k++;
  }

  while (j < n2) {
    a[k] = right[j];
    j++;
    k++;
  }
delete [] left;
delete [] right;

}

void mergesort(int arr[],int l,int r)
{
   if(l<r)
   {
    int mid =l+(r-l)/2;
    mergesort(arr,l,mid);
    mergesort(arr,mid+1,r);
    merg(arr,l,mid,r);

   }

}




int main()
{
   int sr[]={10,-1,5,2,4,9};
   mergesort(sr,0,5);
   for(int i=0;i<6;i++)
   {
       cout<<sr[i]<<endl;
   }



    return 0;
}
